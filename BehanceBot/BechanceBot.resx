<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="directoryEntry1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>